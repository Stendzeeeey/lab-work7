Описать рекурсивную функцию NOD(A, B) целого типа, находящую наибольший общий делитель (НОД) двух целых положительных чисел A и B, используя алгоритм Евклида:
НОД(A, B) = НОД(B, A mod B), если B≠0; НОД(A, 0) = A.
С помощью этой функции найти НОД(A, B), НОД(A, C), НОД(A, D), если даны числа A, B, C, D.

#include "pt4.h"
using namespace std;

int gcd(int a, int b) {
    while (a != 0 && b != 0)
    {
        if (a>b)
        {
            a %= b;
        }
        else
        {
            b %= a;
        }
     }
     reti\urn (a + b);
}

    void Solve()
{
    Task("Recur9");
    int a, b, c, d;
    pt >> a >> b >> c >> d;
    pt << gcd(a, b) << gcd(a, c) << gcd(a, d);
}
